{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer, createContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\nexport var CommonStateContext = createContext();\nexport var CommonDispatchContext = createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isSearchBarOpen: !state.isSearchBarOpen\n      });\n\n    case \"SET_SEARCH_KEYWORD\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        searchKeyword: action.payload.searchKeyword\n      });\n\n    default:\n      throw new Error(\"Unknown action: \" + action.type);\n  }\n};\n\nvar CommonProvider = function CommonProvider(_ref) {\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  return _jsx(CommonDispatchContext.Provider, {\n    value: dispatch,\n    children: _jsx(CommonStateContext.Provider, {\n      value: state,\n      children: children\n    })\n  });\n};\n\nexport var toggleSearchBar = function toggleSearchBar(dispatch) {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\nexport var setSearchKeyword = function setSearchKeyword(dispatch, searchKeyword) {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\nexport default CommonProvider;","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/contexts/common.js"],"names":["React","useReducer","createContext","initialState","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","reducer","state","action","type","payload","Error","CommonProvider","children","dispatch","toggleSearchBar","setSearchKeyword"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE,KADE;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;AAKA,OAAO,IAAMC,kBAAkB,GAAGJ,aAAa,EAAxC;AACP,OAAO,IAAMK,qBAAqB,GAAGL,aAAa,EAA3C;;AAEP,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACE,6CACKF,KADL;AAEEL,QAAAA,eAAe,EAAE,CAACK,KAAK,CAACL;AAF1B;;AAIF,SAAK,oBAAL;AACE,6CACKK,KADL;AAEEJ,QAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAFhC;;AAIF;AACE,YAAM,IAAIQ,KAAJ,sBAA6BH,MAAM,CAACC,IAApC,CAAN;AAZJ;AAcD,CAfD;;AAiBA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACvC,oBAA0Bd,UAAU,CAACO,OAAD,EAAUL,YAAV,CAApC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcO,QAAd;;AACA,SACE,KAAC,qBAAD,CAAuB,QAAvB;AAAgC,IAAA,KAAK,EAAEA,QAAvC;AAAA,cACE,KAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAEP,KAApC;AAAA,gBACGM;AADH;AADF,IADF;AAOD,CATD;;AAWA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACD,QAAD,EAAc;AAC3C,SAAOA,QAAQ,CAAC;AACdL,IAAAA,IAAI,EAAE;AADQ,GAAD,CAAf;AAGD,CAJM;AAMP,OAAO,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,QAAD,EAAWX,aAAX,EAA6B;AAC3D,SAAOW,QAAQ,CAAC;AACdL,IAAAA,IAAI,EAAE,oBADQ;AAEdC,IAAAA,OAAO,EAAE;AACPP,MAAAA,aAAa,EAAEA;AADR;AAFK,GAAD,CAAf;AAMD,CAPM;AASP,eAAeS,cAAf","sourcesContent":["import React, { useReducer, createContext } from \"react\";\r\n\r\nconst initialState = {\r\n  isSearchBarOpen: false,\r\n  searchKeyword: \"\"\r\n};\r\n\r\nexport const CommonStateContext = createContext();\r\nexport const CommonDispatchContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SEARCH_BAR\":\r\n      return {\r\n        ...state,\r\n        isSearchBarOpen: !state.isSearchBarOpen\r\n      };\r\n    case \"SET_SEARCH_KEYWORD\":\r\n      return {\r\n        ...state,\r\n        searchKeyword: action.payload.searchKeyword\r\n      };\r\n    default:\r\n      throw new Error(`Unknown action: ${action.type}`);\r\n  }\r\n};\r\n\r\nconst CommonProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <CommonDispatchContext.Provider value={dispatch}>\r\n      <CommonStateContext.Provider value={state}>\r\n        {children}\r\n      </CommonStateContext.Provider>\r\n    </CommonDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport const toggleSearchBar = (dispatch) => {\r\n  return dispatch({\r\n    type: \"TOGGLE_SEARCH_BAR\"\r\n  });\r\n};\r\n\r\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\r\n  return dispatch({\r\n    type: \"SET_SEARCH_KEYWORD\",\r\n    payload: {\r\n      searchKeyword: searchKeyword\r\n    }\r\n  });\r\n};\r\n\r\nexport default CommonProvider;\r\n"]},"metadata":{},"sourceType":"module"}