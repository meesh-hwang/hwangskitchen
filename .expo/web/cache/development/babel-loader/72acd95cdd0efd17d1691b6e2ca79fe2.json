{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialState = {\n  isCartOpen: false,\n  items: []\n};\nexport var CartStateContext = createContext();\nexport var CartDispatchContext = createContext();\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCartOpen: !state.isCartOpen\n      });\n\n    case \"ADD_TO_CART\":\n      var id = action.payload.cartItem.id;\n      var isOld = state.items.map(function (item) {\n        return item.id;\n      }).includes(id);\n      var cartItems = null;\n      var totalQuantity = cartItems.quantity;\n\n      if (isOld) {\n        var items = state.items.map(function (item) {\n          if (item.id === id) {\n            return _objectSpread(_objectSpread({}, item), {}, {\n              quantity: item.quantity + 1\n            });\n          }\n\n          return item;\n        });\n        cartItems = _toConsumableArray(items);\n      } else {\n        cartItems = [].concat(_toConsumableArray(state.items), [action.payload.cartItem]);\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: cartItems\n      });\n\n    case \"REMOVE_FROM_CART\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: state.items.filter(function (item) {\n          return item.id !== action.payload.cartItemId;\n        })\n      });\n\n    case \"CLEAR_CART\":\n      return _objectSpread(_objectSpread({}, state), initialState);\n\n    default:\n      throw new Error(\"Unknown action: \" + action.type);\n  }\n};\n\nexport var toggleCartPopup = function toggleCartPopup(dispatch) {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\nexport var addToCart = function addToCart(dispatch, cartItem) {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\nexport var removeFromCart = function removeFromCart(dispatch, cartItemId) {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\nexport var clearCart = function clearCart(dispatch) {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nvar CartProvider = function CartProvider(_ref) {\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage(\"cartItems\", \"quantity\", []),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      persistedCartItems = _useLocalStorage2[0],\n      setPersistedCartItems = _useLocalStorage2[1];\n\n  var persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n\n  var _useReducer = useReducer(reducer, persistedCartState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return _jsx(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: _jsx(CartStateContext.Provider, {\n      value: state,\n      children: children\n    })\n  });\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/contexts/cart.js"],"names":["React","useReducer","createContext","useEffect","useLocalStorage","initialState","isCartOpen","items","CartStateContext","CartDispatchContext","reducer","state","action","type","id","payload","cartItem","isOld","map","item","includes","cartItems","totalQuantity","quantity","filter","cartItemId","Error","toggleCartPopup","dispatch","addToCart","removeFromCart","clearCart","CartProvider","children","persistedCartItems","setPersistedCartItems","persistedCartState","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext, useEffect } from \"react\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst initialState = {\r\n  isCartOpen: false,\r\n  items: []\r\n};\r\n\r\nexport const CartStateContext = createContext();\r\nexport const CartDispatchContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_CART_POPUP\":\r\n      return {\r\n        ...state,\r\n        isCartOpen: !state.isCartOpen\r\n      };\r\n    case \"ADD_TO_CART\":\r\n      const id = action.payload.cartItem.id;\r\n      const isOld = state.items.map((item) => item.id).includes(id);\r\n      let cartItems = null;\r\n      let totalQuantity = cartItems.quantity\r\n\r\n      if (isOld) {\r\n        const items = state.items.map((item) => {\r\n          if (item.id === id) {\r\n            return {\r\n              ...item,\r\n              quantity: item.quantity +1, \r\n            };\r\n          }\r\n          return item;\r\n        });\r\n        cartItems = [...items];\r\n      } else {\r\n        cartItems = [...state.items, action.payload.cartItem];\r\n      }\r\n      return {\r\n        ...state,\r\n        items: cartItems\r\n      };\r\n    case \"REMOVE_FROM_CART\":\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(\r\n          (item) => item.id !== action.payload.cartItemId\r\n        )\r\n      };\r\n    case \"CLEAR_CART\":\r\n      return {\r\n        ...state,\r\n        ...initialState\r\n      };\r\n    default:\r\n      throw new Error(`Unknown action: ${action.type}`);\r\n  }\r\n};\r\n\r\nexport const toggleCartPopup = (dispatch) => {\r\n  return dispatch({\r\n    type: \"TOGGLE_CART_POPUP\"\r\n  });\r\n};\r\n\r\nexport const addToCart = (dispatch, cartItem,) => {\r\n  return dispatch({\r\n    type: \"ADD_TO_CART\",\r\n    payload: {\r\n      cartItem: cartItem\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeFromCart = (dispatch, cartItemId) => {\r\n  return dispatch({\r\n    type: \"REMOVE_FROM_CART\",\r\n    payload: {\r\n      cartItemId: cartItemId\r\n    }\r\n  });\r\n};\r\n\r\nexport const clearCart = (dispatch) => {\r\n  return dispatch({\r\n    type: \"CLEAR_CART\"\r\n  });\r\n};\r\n\r\nconst CartProvider = ({ children }) => {\r\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\r\n    \"cartItems\", \"quantity\",\r\n    []\r\n  );\r\n  const persistedCartState = {\r\n    isCartOpen: false,\r\n    items: persistedCartItems || []\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\r\n  useEffect(() => {\r\n    setPersistedCartItems(state.items);\r\n  }, [JSON.stringify(state.items)]);\r\n  return (\r\n    <CartDispatchContext.Provider value={dispatch}>\r\n      <CartStateContext.Provider value={state}>\r\n        {children}\r\n      </CartStateContext.Provider>\r\n    </CartDispatchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}