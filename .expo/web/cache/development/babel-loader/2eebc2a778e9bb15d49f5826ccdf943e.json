{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from \"react\";\nimport { useState, useContext } from \"react\";\nimport \"../css/main.css\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as RootNavigation from \"../RootNavigation.js\";\nimport { ThemeProvider } from 'react-native-elements';\nimport { HwangsTheme } from \"../themes/HwangsTheme\";\nimport logo from \"../assets/img/logo.png\";\nimport cart from \"../assets/img/cart.png\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport { CartStateContext, CartDispatchContext, toggleCartPopup } from \"../contexts/cart\";\nimport { CommonDispatchContext } from \"../contexts/common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Header = function Header(props) {\n  var _useContext = useContext(CartStateContext),\n      cartItems = _useContext.items,\n      isCartOpen = _useContext.isCartOpen;\n\n  var commonDispatch = useContext(CommonDispatchContext);\n  var cartDispatch = useContext(CartDispatchContext);\n  var cartQuantity = 0;\n\n  var itemQuantity = _toConsumableArray(cartItems);\n\n  var quantityObj = itemQuantity.filter(function (item) {\n    cartQuantity += item.quantity;\n  });\n  Array.from(cartQuantity);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      navbarOpen = _useState2[0],\n      setNavbarOpen = _useState2[1];\n\n  var handleToggle = function handleToggle() {\n    setNavbarOpen(!navbarOpen);\n  };\n\n  return _jsx(ThemeProvider, {\n    theme: HwangsTheme,\n    children: _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsxs(\"nav\", {\n          className: \"navBar\",\n          children: [_jsx(\"button\", {\n            onClick: handleToggle,\n            children: _jsxs(\"div\", {\n              className: navbarOpen ? \"open\" : \"close\",\n              children: [_jsx(\"span\", {}), _jsx(\"span\", {}), _jsx(\"span\", {})]\n            })\n          }), _jsxs(\"ul\", {\n            className: \"menuNav\" + (navbarOpen ? \"showMenu\" : \"\"),\n            children: [_jsx(\"li\", {\n              children: _jsx(\"a\", {\n                href: \"#\",\n                children: \"Menu\"\n              })\n            }), _jsx(\"li\", {\n              children: _jsx(\"a\", {\n                href: \"#\",\n                children: \"Catering\"\n              })\n            }), _jsx(\"li\", {\n              children: _jsx(\"a\", {\n                href: \"#\",\n                children: \"About\"\n              })\n            })]\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(\"button\", {\n          onClick: RootNavigation.navigate('Home'),\n          className: \"headerLogo\",\n          children: _jsx(\"img\", {\n            src: logo,\n            alt: \"Hwang's Kitchen\",\n            className: \"logo\"\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'flex-end'\n        },\n        children: _jsxs(\"div\", {\n          className: \"cart-icon\",\n          children: [_jsx(\"button\", {\n            style: {\n              border: 'none',\n              backgroundColor: 'transparent',\n              padding: 0\n            },\n            onClick: function onClick() {\n              return RootNavigation.navigate('Cart');\n            },\n            className: \"cartBtn\",\n            children: _jsx(\"img\", {\n              src: cart,\n              alt: \"Shopping cart icon\",\n              className: props.cartBounce ? \"tada\" : \" \"\n            })\n          }), cartQuantity ? _jsx(\"span\", {\n            className: \"cart-count\",\n            children: cartQuantity\n          }) : \"\"]\n        })\n      })]\n    })\n  });\n};\n\nexport default Header;\nvar styles = StyleSheet.create({\n  header: {\n    backgroundColor: 'white',\n    top: 0,\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: '40px',\n    zIndex: 100,\n    position: 'fixed',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/components/Header.js"],"names":["React","useState","useContext","RootNavigation","ThemeProvider","HwangsTheme","logo","cart","HomeScreen","CartStateContext","CartDispatchContext","toggleCartPopup","CommonDispatchContext","Header","props","cartItems","items","isCartOpen","commonDispatch","cartDispatch","cartQuantity","itemQuantity","quantityObj","filter","item","quantity","Array","from","navbarOpen","setNavbarOpen","handleToggle","styles","header","flex","navigate","flexDirection","justifyContent","border","backgroundColor","padding","cartBounce","StyleSheet","create","top","zIndex","position","width"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\n\r\n// Import use state\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport '../css/main.css';\r\nimport { StyleSheet, View, TouchableOpacity} from 'react-native';\r\nimport * as RootNavigation from '../RootNavigation.js';\r\n// Import theme\r\nimport { ThemeProvider, } from 'react-native-elements';\r\nimport { HwangsTheme } from '../themes/HwangsTheme';\r\n\r\n// Import images\r\nimport logo from '../assets/img/logo.png';\r\nimport cart from '../assets/img/cart.png';\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\n\r\nimport {\r\n  CartStateContext,\r\n  CartDispatchContext,\r\n  toggleCartPopup\r\n} from \"../contexts/cart\";\r\nimport { CommonDispatchContext } from \"../contexts/common\";\r\n\r\nconst Header = (props) => {\r\n  const { items: cartItems, isCartOpen } = useContext(CartStateContext);\r\n  const commonDispatch = useContext(CommonDispatchContext);\r\n  const cartDispatch = useContext(CartDispatchContext);\r\n\r\n  // Cart quantity number\r\n  let cartQuantity=0;\r\n  let itemQuantity = [...cartItems];\r\n    const quantityObj = itemQuantity.filter(item => { cartQuantity+=\r\n      item.quantity});\r\n\r\n    Array.from(cartQuantity);\r\n\r\n\r\n\r\n\r\n  const [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setNavbarOpen(!navbarOpen)\r\n  };\r\n  return (\r\n    <ThemeProvider theme={HwangsTheme}>\r\n      <View style={styles.header}> \r\n            <View style={{flex:1 }}>\r\n              <nav className=\"navBar\">\r\n                <button onClick={handleToggle}>\r\n                  <div className={navbarOpen ? \"open\" : \"close\"}>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                  </div>\r\n                  </button>\r\n                <ul className={`menuNav${navbarOpen ? \"showMenu\" : \"\"}`}>\r\n                  <li>\r\n                    <a href=\"#\">Menu</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">Catering</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#\">About</a>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </View>\r\n            <View style={{flex:1}}>\r\n              <button onClick={RootNavigation.navigate('Home')} className='headerLogo'>\r\n                <img src={logo} alt=\"Hwang's Kitchen\" className=\"logo\" />\r\n              </button>         \r\n            </View>\r\n            <View style={{flex:1,flexDirection:'row', justifyContent:'flex-end'}}>\r\n              <div className=\"cart-icon\">\r\n                <button style={{border:'none', backgroundColor:'transparent', padding:0}} onClick={() => RootNavigation.navigate('Cart')} className='cartBtn'><img src={cart} alt=\"Shopping cart icon\" className={props.cartBounce ? \"tada\" : \" \"} />\r\n                </button>\r\n                {cartQuantity ? (\r\n                    <span className=\"cart-count\">{cartQuantity}</span>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n              </div>\r\n            </View>\r\n      </View>\r\n    </ThemeProvider>\r\n\r\n  );\r\n\r\n};\r\nexport default Header;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    header: {\r\n      backgroundColor:'white',\r\n      top:0,\r\n      flex:1,\r\n      flexDirection:'row',\r\n      justifyContent:'center',\r\n      padding: '40px',\r\n      zIndex:100,\r\n      position:'fixed',\r\n      width: '100%'\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}