{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport { Text, ListItem, ThemeProvider, Avatar } from 'react-native-elements';\nimport { CartDispatchContext, addToCart } from \"../contexts/cart\";\nimport \"../css/main.js\";\nimport Icon from 'react-native-ionicons';\nimport { HwangsTheme } from \"../themes/HwangsTheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProductCard = function ProductCard(_ref) {\n  var itemData = _ref.itemData,\n      quantityNumber = _ref.quantityNumber;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAdded = _useState2[0],\n      setIsAdded = _useState2[1];\n\n  var dispatch = useContext(CartDispatchContext);\n  var keyImage = itemData.keyImage,\n      name = itemData.name,\n      price = itemData.price,\n      id = itemData.id;\n\n  var handleAddToCart = function handleAddToCart() {\n    var product = _objectSpread(_objectSpread({}, itemData), {}, {\n      quantity: 1\n    });\n\n    product;\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(function () {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return _jsxs(ThemeProvider, {\n    theme: HwangsTheme,\n    children: [_jsx(ListItem, {\n      children: _jsxs(ListItem.Content, {\n        children: [_jsx(Avatar, {\n          source: {\n            uri: itemData.keyImage\n          },\n          style: {\n            width: 200,\n            height: 200,\n            alignSelf: 'center'\n          }\n        }), _jsx(Text, {\n          h3: true,\n          style: {\n            alignSelf: 'center'\n          },\n          children: itemData.name\n        }), _jsx(Text, {\n          h4: true,\n          style: {\n            alignSelf: 'center'\n          },\n          children: itemData.price\n        })]\n      })\n    }), _jsx(\"button\", {\n      className: !isAdded ? \"addToOrderBtn\" : \"added\",\n      onClick: handleAddToCart,\n      style: {\n        alignSelf: 'center',\n        marginBottom: 20\n      },\n      children: !isAdded ? \"+\" : \"✔ ADDED\"\n    })]\n  });\n};\n\nexport default ProductCard;","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/components/FoodItem.js"],"names":["React","useState","useContext","Text","ListItem","ThemeProvider","Avatar","CartDispatchContext","addToCart","Icon","HwangsTheme","ProductCard","itemData","quantityNumber","isAdded","setIsAdded","dispatch","keyImage","name","price","id","handleAddToCart","product","quantity","setTimeout","uri","width","height","alignSelf","marginBottom"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAGA,SAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,MAAzC,QAAuD,uBAAvD;AACA,SAASC,mBAAT,EAA8BC,SAA9B;AAEA;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,WAAT;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AACpD,kBAA8BZ,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,QAAQ,GAAGd,UAAU,CAACK,mBAAD,CAA3B;AACA,MAAQU,QAAR,GAAsCL,QAAtC,CAAQK,QAAR;AAAA,MAAkBC,IAAlB,GAAsCN,QAAtC,CAAkBM,IAAlB;AAAA,MAAwBC,KAAxB,GAAsCP,QAAtC,CAAwBO,KAAxB;AAAA,MAA+BC,EAA/B,GAAsCR,QAAtC,CAA+BQ,EAA/B;;AAGA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAG5B,QAAMC,OAAO,mCAAQV,QAAR;AAAkBW,MAAAA,QAAQ,EAAE;AAA5B,MAAb;;AACAD,IAAAA,OAAO;AACPd,IAAAA,SAAS,CAACQ,QAAD,EAAWM,OAAX,CAAT;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,IAAAA,UAAU,CAAC,YAAM;AACfT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFS,EAEP,IAFO,CAAV;AAMD,GAbD;;AAiBA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEL,WAAtB;AAAA,eACA,KAAC,QAAD;AAAA,gBACE,MAAC,QAAD,CAAU,OAAV;AAAA,mBACE,KAAC,MAAD;AAAQ,UAAA,MAAM,EAAE;AAACe,YAAAA,GAAG,EAAEb,QAAQ,CAACK;AAAf,WAAhB;AAA0C,UAAA,KAAK,EAAE;AAAES,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE,GAAtB;AAA2BC,YAAAA,SAAS,EAAC;AAArC;AAAjD,UADF,EAEE,KAAC,IAAD;AAAM,UAAA,EAAE,MAAR;AAAS,UAAA,KAAK,EAAE;AAACA,YAAAA,SAAS,EAAC;AAAX,WAAhB;AAAA,oBAAuChB,QAAQ,CAACM;AAAhD,UAFF,EAGE,KAAC,IAAD;AAAM,UAAA,EAAE,MAAR;AAAS,UAAA,KAAK,EAAE;AAACU,YAAAA,SAAS,EAAC;AAAX,WAAhB;AAAA,oBAAuChB,QAAQ,CAACO;AAAhD,UAHF;AAAA;AADF,MADA,EAQA;AACI,MAAA,SAAS,EAAI,CAACL,OAAD,GAAW,eAAX,GAA6B,OAD9C;AAEI,MAAA,OAAO,EAAEO,eAFb;AAGI,MAAA,KAAK,EAAE;AACLO,QAAAA,SAAS,EAAC,QADL;AAELC,QAAAA,YAAY,EAAE;AAFT,OAHX;AAAA,gBAQO,CAACf,OAAD,GAAW,GAAX,GAAgB;AARvB,MARA;AAAA,IADF;AAsBD,CA7CD;;AA8CA,eAAeH,WAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\n\n\nimport {  Text, ListItem, ThemeProvider, Avatar } from 'react-native-elements';\nimport { CartDispatchContext, addToCart } from \"../contexts/cart\";\n\nimport '../css/main.js';\nimport Icon from 'react-native-ionicons';\n\nimport { HwangsTheme } from '../themes/HwangsTheme';\n\nconst ProductCard = ({ itemData, quantityNumber }) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const { keyImage, name, price, id } = itemData;\n  \n\n  const handleAddToCart = () => {\n    \n\n    const product = { ...itemData, quantity: 1 };\n    product\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n\n\n    \n  };\n\n\n\n  return (    \n    <ThemeProvider theme={HwangsTheme}>\n    <ListItem>\n      <ListItem.Content>\n        <Avatar source={{uri: itemData.keyImage}} style={{ width: 200, height: 200, alignSelf:'center'}} />\n        <Text h3 style={{alignSelf:'center'}}>{itemData.name}</Text>\n        <Text h4 style={{alignSelf:'center'}}>{itemData.price}</Text>\n      </ListItem.Content>\n    </ListItem>\n    <button\n        className= { !isAdded ? \"addToOrderBtn\" : \"added\"}\n        onClick={handleAddToCart}\n        style={{\n          alignSelf:'center',\n          marginBottom: 20\n        }}\n      >\n          {!isAdded ? \"+\": \"✔ ADDED\"}\n\n        </button>\n    </ThemeProvider>\n  );\n};\nexport default ProductCard;\n"]},"metadata":{},"sourceType":"module"}