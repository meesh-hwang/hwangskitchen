{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ThemeProvider } from 'react-native-elements';\nimport { HwangsTheme } from \"../themes/HwangsTheme\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport React, { useContext } from \"react\";\nimport { CartStateContext, CartDispatchContext, removeFromCart, toggleCartPopup, CartProvider } from \"../contexts/cart\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Cart(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(CartStateContext),\n      items = _useContext.items,\n      isCartOpen = _useContext.isCartOpen;\n\n  var dispatch = useContext(CartDispatchContext);\n\n  var handleRemove = function handleRemove(productId) {\n    return removeFromCart(dispatch, productId);\n  };\n\n  return _jsxs(\"div\", {\n    className: classNames(\"cart-preview\", {\n      active: isCartOpen\n    }),\n    children: [_jsx(\"ul\", {\n      className: \"cart-items\",\n      children: items.map(function (product) {\n        return _jsxs(\"li\", {\n          className: \"cart-item\",\n          children: [_jsx(\"img\", {\n            className: \"product-image\",\n            src: product.image\n          }), _jsxs(\"div\", {\n            className: \"product-info\",\n            children: [_jsx(\"p\", {\n              className: \"product-name\",\n              children: product.name\n            }), _jsx(\"p\", {\n              className: \"product-price\",\n              children: product.price\n            })]\n          }), _jsxs(\"div\", {\n            className: \"product-total\",\n            children: [_jsx(\"p\", {\n              className: \"quantity\",\n              children: product.quantity + \" \" + (product.quantity > 1 ? \"Nos.\" : \"No.\")\n            }), _jsx(\"p\", {\n              className: \"amount\",\n              children: product.quantity * product.price\n            })]\n          }), _jsx(\"button\", {\n            className: \"product-remove\",\n            onClick: function onClick() {\n              return handleRemove(product.id);\n            },\n            children: \"\\xD7\"\n          })]\n        }, product.name);\n      })\n    }), _jsx(\"div\", {\n      className: \"action-block\",\n      children: _jsx(\"button\", {\n        type: \"button\",\n        className: classNames({\n          disabled: items && items.length === 0\n        }),\n        onClick: handleProceedCheckout,\n        children: \"PROCEED TO CHECKOUT\"\n      })\n    })]\n  });\n}\n;","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/screens/Cart.js"],"names":["ThemeProvider","HwangsTheme","useLocalStorage","React","useContext","CartStateContext","CartDispatchContext","removeFromCart","toggleCartPopup","CartProvider","Cart","navigation","items","isCartOpen","dispatch","handleRemove","productId","classNames","active","map","product","image","name","price","quantity","id","disabled","length","handleProceedCheckout"],"mappings":";;AAEA,SAASA,aAAT,QAA+B,uBAA/B;AAEA,SAASC,WAAT;AAGA,OAAOC,eAAP;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,YALF;;;AAQA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AACzC,oBAA8BP,UAAU,CAACC,gBAAD,CAAxC;AAAA,MAAQO,KAAR,eAAQA,KAAR;AAAA,MAAeC,UAAf,eAAeA,UAAf;;AACA,MAAMC,QAAQ,GAAGV,UAAU,CAACE,mBAAD,CAA3B;;AAEA,MAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAe;AAClC,WAAOT,cAAc,CAACO,QAAD,EAAWE,SAAX,CAArB;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAEC,UAAU,CAAC,cAAD,EAAiB;AAAEC,MAAAA,MAAM,EAAEL;AAAV,KAAjB,CAA1B;AAAA,eACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBAEGD,KAAK,CAACO,GAAN,CAAU,UAACC,OAAD,EAAa;AACtB,eACE;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,qBACE;AAAK,YAAA,SAAS,EAAC,eAAf;AAA+B,YAAA,GAAG,EAAEA,OAAO,CAACC;AAA5C,YADF,EAEE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,uBACE;AAAG,cAAA,SAAS,EAAC,cAAb;AAAA,wBAA6BD,OAAO,CAACE;AAArC,cADF,EAEE;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA,wBAA8BF,OAAO,CAACG;AAAtC,cAFF;AAAA,YAFF,EAME;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,uBACE;AAAG,cAAA,SAAS,EAAC,UAAb;AAAA,wBACMH,OAAO,CAACI,QADd,UAEIJ,OAAO,CAACI,QAAR,GAAmB,CAAnB,GAAuB,MAAvB,GAAgC,KAFpC;AAAA,cADF,EAME;AAAG,cAAA,SAAS,EAAC,QAAb;AAAA,wBAAuBJ,OAAO,CAACI,QAAR,GAAmBJ,OAAO,CAACG;AAAlD,cANF;AAAA,YANF,EAcE;AACE,YAAA,SAAS,EAAC,gBADZ;AAEE,YAAA,OAAO,EAAE;AAAA,qBAAMR,YAAY,CAACK,OAAO,CAACK,EAAT,CAAlB;AAAA,aAFX;AAAA;AAAA,YAdF;AAAA,WAA+BL,OAAO,CAACE,IAAvC,CADF;AAuBD,OAxBA;AAFH,MADF,EA8BE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEL,UAAU,CAAC;AAAES,UAAAA,QAAQ,EAAEd,KAAK,IAAIA,KAAK,CAACe,MAAN,KAAiB;AAAtC,SAAD,CAFvB;AAGE,QAAA,OAAO,EAAEC,qBAHX;AAAA;AAAA;AADF,MA9BF;AAAA,IADF;AA0CD;AAAA","sourcesContent":["import { StyleSheet, View, } from 'react-native';\r\n\r\nimport { ThemeProvider, } from 'react-native-elements';\r\n\r\nimport { HwangsTheme } from '../themes/HwangsTheme';\r\n\r\n// Bring in everything added to the cart\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nimport React, { useContext } from \"react\";\r\nimport {\r\n  CartStateContext,\r\n  CartDispatchContext,\r\n  removeFromCart,\r\n  toggleCartPopup,\r\n  CartProvider\r\n} from \"../contexts/cart\";\r\n\r\nexport default function Cart({navigation}) {\r\n  const { items, isCartOpen } = useContext(CartStateContext);\r\n  const dispatch = useContext(CartDispatchContext);\r\n\r\n  const handleRemove = (productId) => {\r\n    return removeFromCart(dispatch, productId);\r\n  };\r\n \r\n  return (\r\n    <div className={classNames(\"cart-preview\", { active: isCartOpen })}>\r\n      <ul className=\"cart-items\">\r\n\r\n        {items.map((product) => {\r\n          return (\r\n            <li className=\"cart-item\" key={product.name}>\r\n              <img className=\"product-image\" src={product.image} />\r\n              <div className=\"product-info\">\r\n                <p className=\"product-name\">{product.name}</p>\r\n                <p className=\"product-price\">{product.price}</p>\r\n              </div>\r\n              <div className=\"product-total\">\r\n                <p className=\"quantity\">\r\n                  {`${product.quantity} ${\r\n                    product.quantity > 1 ? \"Nos.\" : \"No.\"\r\n                  }`}\r\n                </p>\r\n                <p className=\"amount\">{product.quantity * product.price}</p>\r\n              </div>\r\n              <button\r\n                className=\"product-remove\"\r\n                onClick={() => handleRemove(product.id)}\r\n              >\r\n                Ã—\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n        \r\n      </ul>\r\n      <div className=\"action-block\">\r\n        <button\r\n          type=\"button\"\r\n          className={classNames({ disabled: items && items.length === 0 })}\r\n          onClick={handleProceedCheckout}\r\n        >\r\n          PROCEED TO CHECKOUT\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}