{"ast":null,"code":"import*as React from'react';export default function useKeyedChildListeners(){var _React$useRef=React.useRef({getState:{},beforeRemove:{}}),keyedListeners=_React$useRef.current;var addKeyedListener=React.useCallback(function(type,key,listener){keyedListeners[type][key]=listener;return function(){keyedListeners[type][key]=undefined;};},[keyedListeners]);return{keyedListeners:keyedListeners,addKeyedListener:addKeyedListener};}","map":{"version":3,"sources":["useKeyedChildListeners.tsx"],"names":["current","keyedListeners","getState","beforeRemove","addKeyedListener"],"mappings":"AAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CAOA,cAAe,SAAA,CAAA,sBAAA,EAAkC,CAC/C,kBAAoC,KAAK,CAAL,MAAA,CAKjC,CACDE,QAAQ,CADP,EAAA,CAEDC,YAAY,CAAE,EAFb,CALiC,CAApC,CAAiBF,cAAjB,eAAQD,OAAR,CAUA,GAAMI,CAAAA,gBAAgB,CAAG,KAAK,CAAL,WAAA,CACvB,SAAA,IAAA,CAAA,GAAA,CAAA,QAAA,CAIK,CACHH,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,EAAAA,QAAAA,CAEA,MAAO,WAAM,CACXA,cAAc,CAAdA,IAAc,CAAdA,CAAAA,GAAAA,EAAAA,SAAAA,CADF,CAAA,CARqB,CAAA,CAYvB,CAZF,cAYE,CAZuB,CAAzB,CAeA,MAAO,CACLA,cADK,CACLA,cADK,CAELG,gBAAAA,CAAAA,gBAFK,CAAP,CAID","sourcesContent":["import * as React from 'react';\n\nimport type { KeyedListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add getters to be called for obtaining rehydrated state.\n */\nexport default function useKeyedChildListeners() {\n  const { current: keyedListeners } = React.useRef<{\n    [K in keyof KeyedListenerMap]: Record<\n      string,\n      KeyedListenerMap[K] | undefined\n    >;\n  }>({\n    getState: {},\n    beforeRemove: {},\n  });\n\n  const addKeyedListener = React.useCallback(\n    <T extends keyof KeyedListenerMap>(\n      type: T,\n      key: string,\n      listener: KeyedListenerMap[T]\n    ) => {\n      keyedListeners[type][key] = listener;\n\n      return () => {\n        keyedListeners[type][key] = undefined;\n      };\n    },\n    [keyedListeners]\n  );\n\n  return {\n    keyedListeners,\n    addKeyedListener,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}