{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from\"react\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{jsx as _jsx}from\"react/jsx-runtime\";var STAR_IMAGE=require(\"../images/airbnb-star.png\");var STAR_SELECTED_IMAGE=require(\"../images/airbnb-star-selected.png\");var STAR_SIZE=40;var Star=function Star(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var springValue=new Animated.Value(1);var spring=function spring(){var position=props.position,starSelectedInPosition=props.starSelectedInPosition;springValue.setValue(1.2);Animated.spring(springValue,{toValue:1,friction:2,tension:1,useNativeDriver:true}).start();setSelected(!selected);starSelectedInPosition(position);};var starImage=props.starImage,fill=props.fill,size=props.size,selectedColor=props.selectedColor,unSelectedColor=props.unSelectedColor,isDisabled=props.isDisabled,starStyle=props.starStyle;var starSource=fill&&selectedColor===null?STAR_SELECTED_IMAGE:starImage;return _jsx(TouchableOpacity,{activeOpacity:1,onPress:spring,disabled:isDisabled,children:_jsx(Animated.Image,{source:starSource,style:[styles.starStyle,{tintColor:fill&&selectedColor?selectedColor:unSelectedColor,width:size||STAR_SIZE,height:size||STAR_SIZE,transform:[{scale:springValue}]},starStyle]})});};Star.defaultProps={starImage:STAR_IMAGE,selectedColor:\"#f1c40f\",unSelectedColor:\"#BDC3C7\"};export default Star;var styles=StyleSheet.create({starStyle:{margin:3}});","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/node_modules/react-native-ratings/dist/components/Star.js"],"names":["React","useState","STAR_IMAGE","require","STAR_SELECTED_IMAGE","STAR_SIZE","Star","props","selected","setSelected","springValue","Animated","Value","spring","position","starSelectedInPosition","setValue","toValue","friction","tension","useNativeDriver","start","starImage","fill","size","selectedColor","unSelectedColor","isDisabled","starStyle","starSource","styles","tintColor","width","height","transform","scale","defaultProps","StyleSheet","create","margin"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,sPAEA,GAAMC,CAAAA,UAAU,CAAGC,OAAO,6BAA1B,CACA,GAAMC,CAAAA,mBAAmB,CAAGD,OAAO,sCAAnC,CACA,GAAME,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,KAAK,CAAI,CAClB,cAAgCN,QAAQ,CAAC,KAAD,CAAxC,wCAAOO,QAAP,eAAiBC,WAAjB,eACA,GAAMC,CAAAA,WAAW,CAAG,GAAIC,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAApB,CACA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAQC,CAAAA,QAAR,CAA6CP,KAA7C,CAAQO,QAAR,CAAkBC,sBAAlB,CAA6CR,KAA7C,CAAkBQ,sBAAlB,CACAL,WAAW,CAACM,QAAZ,CAAqB,GAArB,EACAL,QAAQ,CAACE,MAAT,CAAgBH,WAAhB,CAA6B,CACzBO,OAAO,CAAE,CADgB,CAEzBC,QAAQ,CAAE,CAFe,CAGzBC,OAAO,CAAE,CAHgB,CAIzBC,eAAe,CAAE,IAJQ,CAA7B,EAKGC,KALH,GAMAZ,WAAW,CAAC,CAACD,QAAF,CAAX,CACAO,sBAAsB,CAACD,QAAD,CAAtB,CACH,CAXD,CAYA,GAAQQ,CAAAA,SAAR,CAAyFf,KAAzF,CAAQe,SAAR,CAAmBC,IAAnB,CAAyFhB,KAAzF,CAAmBgB,IAAnB,CAAyBC,IAAzB,CAAyFjB,KAAzF,CAAyBiB,IAAzB,CAA+BC,aAA/B,CAAyFlB,KAAzF,CAA+BkB,aAA/B,CAA8CC,eAA9C,CAAyFnB,KAAzF,CAA8CmB,eAA9C,CAA+DC,UAA/D,CAAyFpB,KAAzF,CAA+DoB,UAA/D,CAA2EC,SAA3E,CAAyFrB,KAAzF,CAA2EqB,SAA3E,CACA,GAAMC,CAAAA,UAAU,CAAGN,IAAI,EAAIE,aAAa,GAAK,IAA1B,CAAiCrB,mBAAjC,CAAuDkB,SAA1E,CACA,MAAQ,MAAC,gBAAD,EAAkB,aAAa,CAAE,CAAjC,CAAoC,OAAO,CAAET,MAA7C,CAAqD,QAAQ,CAAEc,UAA/D,UACN,KAAC,QAAD,CAAU,KAAV,EAAgB,MAAM,CAAEE,UAAxB,CAAoC,KAAK,CAAE,CACrCC,MAAM,CAACF,SAD8B,CAErC,CACIG,SAAS,CAAER,IAAI,EAAIE,aAAR,CAAwBA,aAAxB,CAAwCC,eADvD,CAEIM,KAAK,CAAER,IAAI,EAAInB,SAFnB,CAGI4B,MAAM,CAAET,IAAI,EAAInB,SAHpB,CAII6B,SAAS,CAAE,CAAC,CAAEC,KAAK,CAAEzB,WAAT,CAAD,CAJf,CAFqC,CAQrCkB,SARqC,CAA3C,EADM,EAAR,CAYH,CA7BD,CA8BAtB,IAAI,CAAC8B,YAAL,CAAoB,CAChBd,SAAS,CAAEpB,UADK,CAEhBuB,aAAa,CAAE,SAFC,CAGhBC,eAAe,CAAE,SAHD,CAApB,CAKA,cAAepB,CAAAA,IAAf,CACA,GAAMwB,CAAAA,MAAM,CAAGO,UAAU,CAACC,MAAX,CAAkB,CAC7BV,SAAS,CAAE,CACPW,MAAM,CAAE,CADD,CADkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Animated, TouchableOpacity } from \"react-native\";\nconst STAR_IMAGE = require(\"../images/airbnb-star.png\");\nconst STAR_SELECTED_IMAGE = require(\"../images/airbnb-star-selected.png\");\nconst STAR_SIZE = 40;\nconst Star = props => {\n    const [selected, setSelected] = useState(false);\n    const springValue = new Animated.Value(1);\n    const spring = () => {\n        const { position, starSelectedInPosition } = props;\n        springValue.setValue(1.2);\n        Animated.spring(springValue, {\n            toValue: 1,\n            friction: 2,\n            tension: 1,\n            useNativeDriver: true\n        }).start();\n        setSelected(!selected);\n        starSelectedInPosition(position);\n    };\n    const { starImage, fill, size, selectedColor, unSelectedColor, isDisabled, starStyle } = props;\n    const starSource = fill && selectedColor === null ? STAR_SELECTED_IMAGE : starImage;\n    return (<TouchableOpacity activeOpacity={1} onPress={spring} disabled={isDisabled}>\n      <Animated.Image source={starSource} style={[\n            styles.starStyle,\n            {\n                tintColor: fill && selectedColor ? selectedColor : unSelectedColor,\n                width: size || STAR_SIZE,\n                height: size || STAR_SIZE,\n                transform: [{ scale: springValue }]\n            },\n            starStyle\n        ]}/>\n    </TouchableOpacity>);\n};\nStar.defaultProps = {\n    starImage: STAR_IMAGE,\n    selectedColor: \"#f1c40f\",\n    unSelectedColor: \"#BDC3C7\"\n};\nexport default Star;\nconst styles = StyleSheet.create({\n    starStyle: {\n        margin: 3\n    }\n});\n"]},"metadata":{},"sourceType":"module"}