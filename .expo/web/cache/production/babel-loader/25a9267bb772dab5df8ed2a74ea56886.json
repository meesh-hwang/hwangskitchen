{"ast":null,"code":"import{defineAnimation}from\"./util\";export function withSequence(){'worklet';for(var _len=arguments.length,_animations=new Array(_len),_key=0;_key<_len;_key++){_animations[_key]=arguments[_key];}return defineAnimation(_animations[0],function(){'worklet';var animations=_animations.map(function(a){var result=typeof a==='function'?a():a;result.finished=false;return result;});var firstAnimation=animations[0];var callback=function callback(finished){if(finished){return;}animations.forEach(function(animation){if(typeof animation.callback==='function'&&!animation.finished){animation.callback(finished);}});};function sequence(animation,now){var currentAnim=animations[animation.animationIndex];var finished=currentAnim.onFrame(currentAnim,now);animation.current=currentAnim.current;if(finished){if(currentAnim.callback){currentAnim.callback(true);}currentAnim.finished=true;animation.animationIndex+=1;if(animation.animationIndex<animations.length){var nextAnim=animations[animation.animationIndex];nextAnim.onStart(nextAnim,currentAnim.current,now,currentAnim);return false;}return true;}return false;}function onStart(animation,value,now,previousAnimation){if(animations.length===1){throw Error('withSequence() animation require more than one animation as argument');}animation.animationIndex=0;if(previousAnimation===undefined){previousAnimation=animations[animations.length-1];}firstAnimation.onStart(firstAnimation,value,now,previousAnimation);}return{isHigherOrder:true,onFrame:sequence,onStart:onStart,animationIndex:0,current:firstAnimation.current,callback:callback};});}export function sequence(){'worklet';console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');return withSequence.apply(void 0,arguments);}","map":{"version":3,"sources":["C:/Users/miche/Desktop/hwangskitchen/node_modules/react-native-reanimated/lib/reanimated2/animation/sequence.js"],"names":["defineAnimation","withSequence","_animations","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","length","nextAnim","onStart","value","previousAnimation","Error","undefined","isHigherOrder","console","warn"],"mappings":"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","sourcesContent":["import { defineAnimation } from './util';\nexport function withSequence(..._animations) {\n    'worklet';\n    return defineAnimation(_animations[0], () => {\n        'worklet';\n        const animations = _animations.map((a) => {\n            const result = typeof a === 'function' ? a() : a;\n            result.finished = false;\n            return result;\n        });\n        const firstAnimation = animations[0];\n        const callback = (finished) => {\n            if (finished) {\n                // we want to call the callback after every single animation\n                // not after all of them\n                return;\n            }\n            // this is going to be called only if sequence has been cancelled\n            animations.forEach((animation) => {\n                if (typeof animation.callback === 'function' && !animation.finished) {\n                    animation.callback(finished);\n                }\n            });\n        };\n        function sequence(animation, now) {\n            const currentAnim = animations[animation.animationIndex];\n            const finished = currentAnim.onFrame(currentAnim, now);\n            animation.current = currentAnim.current;\n            if (finished) {\n                // we want to call the callback after every single animation\n                if (currentAnim.callback) {\n                    currentAnim.callback(true /* finished */);\n                }\n                currentAnim.finished = true;\n                animation.animationIndex += 1;\n                if (animation.animationIndex < animations.length) {\n                    const nextAnim = animations[animation.animationIndex];\n                    nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n                    return false;\n                }\n                return true;\n            }\n            return false;\n        }\n        function onStart(animation, value, now, previousAnimation) {\n            if (animations.length === 1) {\n                throw Error('withSequence() animation require more than one animation as argument');\n            }\n            animation.animationIndex = 0;\n            if (previousAnimation === undefined) {\n                previousAnimation = animations[animations.length - 1];\n            }\n            firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n        }\n        return {\n            isHigherOrder: true,\n            onFrame: sequence,\n            onStart,\n            animationIndex: 0,\n            current: firstAnimation.current,\n            callback,\n        };\n    });\n}\n/**\n * @deprecated Kept for backward compatibility. Will be removed soon.\n */\nexport function sequence(..._animations) {\n    'worklet';\n    console.warn('Method `sequence` is deprecated. Please use `withSequence` instead');\n    return withSequence(..._animations);\n}\n"]},"metadata":{},"sourceType":"module"}